
substitutions:
  name: "esp8266-0x25-sensors_only"
  friendly_name: "esp8266-0x25-sensors_only"

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev
  libraries:
    # massive improvement to event throughput to the on-device web_server dashboard
    # can be removed once this PR goes through: https://github.com/esphome/ESPAsyncWebServer/pull/41
    # but the web_server dashboard is basically useless on an 8266 without it
    - ESPAsyncWebServer-esphome=https://github.com/nkinnan/ESPAsyncWebServer#async_event_source_yield

esp8266:
  board: esp01_1m

# Enable logging
logger:
  # using UART0 for BMS communications
  hardware_uart: UART1

  # use INFO for production, VERY_VERBOSE for debugging or filing an issue report
  level: INFO
  #level: DEBUG
  #level: VERBOSE
  #level: VERY_VERBOSE

# Enable Home Assistant API
api:
  encryption:
   key: !secret api_encryption_key

  # the 8266 WiFi stack may not be completely stable, requiring reboot if it gets into a bad state
  reboot_timeout: 15min

# Allow Over-The-Air updates
ota:
  platform: esphome
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # In conjunction with captive_portal, this spawns an AP with the device name and mac address if unable to connect
  ap: 
    password: !secret fallback_hotspot_password

    # how long to try connecting to WiFi before spawning the backup AP
    ap_timeout: 5min

  # the 8266 WiFi stack may not be completely stable, requiring reboot if it gets into a bad state
  reboot_timeout: 15min

# In combination with the wifi fallback AP this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

# allows access to all BMS sensors and configuration
web_server:
  version: 3

  # this would just be annoying every time, so disable ota from here instead
  #auth:
  #  username: !secret web_server_username
  #  password: !secret web_server_password  
  
  # disable firmware upload via the web server which is currently un-authenticated
  ota: false

  # don't reference external resources hosted on the net so that device webserver dashboard will continue working if internet is down
  # a 1MB flash 8266 is not going to have enough space for this
  # local: true

# import the pace_bms component
external_components:
  - source:
      type: git
      url: https://github.com/nkinnan/esphome-pace-bms
      ref: "main"
    components: [ pace_bms ]
    refresh: 1s

  # this can be removed once the PR goes through: https://github.com/esphome/esphome/pull/7425
  - source:
      type: git
      url: https://github.com/nkinnan/esphome
      ref: "make_time_dependency_optional"
    components: [ datetime ]
    refresh: 1s

uart:
  id: uart_0
  baud_rate: 9600 
  tx_pin: GPIO1
  rx_pin: GPIO3
  rx_buffer_size: 256

pace_bms:
  id: pace_bms_at_address_1
  address: 1
  uart_id: uart_0
  # needed for RS485
  flow_control_pin: GPIO0 
  update_interval: 5s
  request_throttle: 50ms 
  response_timeout: 1000ms 

  protocol_commandset: 0x25   # example only
  # protocol_variant: "EG4"   # example only
  # protocol_version: 0x20    # example only
  # battery_chemistry: 0x4A   # example only

sensor:
  - platform: pace_bms
    pace_bms_id: pace_bms_at_address_1

    cell_count:
      name: "Cell Count"

    cell_voltage_01:
      name: "Cell Voltage 01"
    cell_voltage_02:
      name: "Cell Voltage 02"
    cell_voltage_03:
      name: "Cell Voltage 03"
    cell_voltage_04:
      name: "Cell Voltage 04"
    cell_voltage_05:
      name: "Cell Voltage 05"
    cell_voltage_06:
      name: "Cell Voltage 06"
    cell_voltage_07:
      name: "Cell Voltage 07"
    cell_voltage_08:
      name: "Cell Voltage 08" 
    cell_voltage_09:
      name: "Cell Voltage 09"
    cell_voltage_10:
      name: "Cell Voltage 10"
    cell_voltage_11:
      name: "Cell Voltage 11"
    cell_voltage_12:
      name: "Cell Voltage 12"
    cell_voltage_13:
      name: "Cell Voltage 13"
    cell_voltage_14:
      name: "Cell Voltage 14"
    cell_voltage_15:
      name: "Cell Voltage 15"
    cell_voltage_16:
      name: "Cell Voltage 16"

    temperature_count:
      name: "Temperature Count"

    # Generally the first four temperatures are cell measurements and the last two are 
    # MOSFET / Environment or Environment / MOSFET with the order of those two depending on manufacturer
    temperature_01:
      name: "Cell Temperature 1"
    temperature_02:
      name: "Cell Temperature 2"
    temperature_03:
      name: "Cell Temperature 3"
    temperature_04:
      name: "Cell Temperature 4"
    temperature_05:
      name: "MOSFET Temperature"
    temperature_06:
      name: "Environment Temperature"

    total_voltage:
      name: "Total Voltage"
    current:
      name: "Current"
    power:
      name: "Power"

    remaining_capacity:
      name: "Remaining Capacity"
    full_capacity:
      name: "Full Capacity"
    design_capacity: # not available on EG4 protocol 0x20 variant
      name: "Design Capacity"

    state_of_charge:
      name: "State of Charge"
    state_of_health:
      name: "State of Health"
    cycle_count:
      name: "Cycle Count"

    min_cell_voltage:
      name: "Min Cell Voltage"
    max_cell_voltage:
      name: "Max Cell Voltage"
    avg_cell_voltage:
      name: "Avg Cell Voltage"
    max_cell_differential:
      name: "Max Cell Differential"

text_sensor:
  - platform: pace_bms
    pace_bms_id: pace_bms_at_address_1

    hardware_version:
      name: "Hardware Version"
    serial_number: # not available on EG4 protocol 0x20 variant
      name: "Serial Number"

    # pre-decoded human readable text strings that describe all of the specific status values and are suitable for display
    warning_status:
      name: "Warning Status"
    protection_status:
      name: "Protection Status"
    fault_status:
      name: "Fault Status"
    system_status:
      name: "System Status"
    configuration_status:
      name: "Configuration Status"
    balancing_status:
      name: "Balancing Status"

datetime:
 - platform: pace_bms
   pace_bms_id: pace_bms_at_address_1

   system_date_and_time:
     name: "System Date and Time"

button:
  - platform: pace_bms
    pace_bms_id: pace_bms_at_address_1

    shutdown:
      name: "Shutdown" # will actually "reboot" if the battery is charging/discharging - it only stays shut down if idle
  
switch:
 - platform: pace_bms
   pace_bms_id: pace_bms_at_address_1

   buzzer_alarm:
     name: "Buzzer Alarm"
   led_alarm:
     name: "Led Alarm"
   charge_current_limiter:
     name: "Charge Current Limiter"
   charge_mosfet:
     name: "Charge Mosfet"
   discharge_mosfet:
     name: "Discharge Mosfet"

select:
  - platform: pace_bms
    pace_bms_id: pace_bms_at_address_1

    charge_current_limiter_gear:
      name: "Charge Current Limiter Gear"

    # setting the protocol is possible on some version 25 BMSes but not all
    protocol_can:
      name: "Protocol (CAN)"
    protocol_rs485:
      name: "Protocol (RS485)"
    protocol_type:
      name: "Protocol (Type)"
